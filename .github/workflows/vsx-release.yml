name: VSCode Extension Release

on:
  push:
    branches: ["main"]
    paths: ["package.json", ".github/workflows/**"]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: "Force Deploy?"
        default: "false"
        type: choice
        options: ["false", "true"]

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.version-check.outputs.should-deploy }}
      version: ${{ steps.version-check.outputs.version }}
      tag-name: ${{ steps.version-check.outputs.tag-name }}
      extension-name: ${{ steps.version-check.outputs.extension-name }}
      display-name: ${{ steps.version-check.outputs.display-name }}
      deploy-reason: ${{ steps.version-check.outputs.deploy-reason }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need full history for release notes

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install dependencies
        run: |
          pnpm install
          pnpm add -g @vscode/vsce

      - name: Check version and deployment
        id: version-check
        env:
          FORCE_DEPLOY: ${{ github.event.inputs.force_deploy }}
        run: node scripts/check-version.mjs

      - name: Package extension
        run: vsce package

      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: extension-vsix
          path: "*.vsix"

  deploy:
    needs: [check-and-build]
    if: needs.check-and-build.outputs.should-deploy == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install tsx
        run: npm install -g tsx

      - name: Download VSIX artifact
        uses: actions/download-artifact@v4
        with:
          name: extension-vsix

      - name: Publish to Open VSX Registry
        uses: HaaLeo/publish-vscode-extension@v2
        id: publishToOpenVSX
        with:
          pat: ${{ secrets.OPEN_VSX_PUBLISH_TOKEN }}

      - name: Publish to VS Code Marketplace
        uses: HaaLeo/publish-vscode-extension@v2
        with:
          pat: ${{ secrets.VS_PUBLISH_TOKEN }}
          skipDuplicate: true
          registryUrl: https://marketplace.visualstudio.com
          extensionFile: ${{ steps.publishToOpenVSX.outputs.vsixPath }}

      - name: Generate release notes
        id: release-notes
        env:
          DEPLOY_REASON: ${{ needs.check-and-build.outputs.deploy-reason }}
        run: node scripts/generate-release-notes.mjs

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.check-and-build.outputs.tag-name }}
          name: ${{ steps.release-notes.outputs.title }}
          body: ${{ steps.release-notes.outputs.content }}
          files: "*.vsix"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
